name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送 v* 标签时触发（例如 v1.0.0）
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: 'Windows'
            os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            bundles: 'msi,nsis'
          - name: 'macOS'
            os: 'macos-latest'
            target: 'x86_64-apple-darwin'
            bundles: 'dmg,app'
          - name: 'macOS ARM'
            os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            bundles: 'dmg,app'
          - name: 'Linux'
            os: 'ubuntu-latest'
            target: 'x86_64-unknown-linux-gnu'
            bundles: 'deb,appimage'

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 安装 Linux 依赖
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: 缓存 Rust 依赖
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: 安装 Tauri CLI
        run: cargo install tauri-cli --version "^2.0.0" --locked

      - name: 构建 Tauri 应用
        run: cargo tauri build --target ${{ matrix.platform.target }} --bundles ${{ matrix.platform.bundles }}

      - name: 上传构建产物 (Windows)
        if: matrix.platform.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/msi/*.msi
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/nsis/*.exe

      - name: 上传构建产物 (macOS)
        if: matrix.platform.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.platform.target }}-installer
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/dmg/*.dmg
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/macos/*.app

      - name: 上传构建产物 (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/deb/*.deb
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/appimage/*.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.msi
            artifacts/**/*.exe
            artifacts/**/*.dmg
            artifacts/**/*.deb
            artifacts/**/*.AppImage
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
